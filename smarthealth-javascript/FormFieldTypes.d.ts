import FormField from './FormField';
import FormFieldBoolean from './FormFieldBoolean';
import FormFieldButton from './FormFieldButton';
import FormFieldConditionsTable from './FormFieldConditionsTable';
import FormFieldDateTime from './FormFieldDateTime';
import FormFieldEnum from './FormFieldEnum';
import FormFieldFormatted from './FormFieldFormatted';
import FormFieldFormSpecific from './FormFieldFormSpecific';
import FormFieldGroup from './FormFieldGroup';
import FormFieldMedicalGroup from './FormFieldMedicalGroup';
import FormFieldMedicalGroupList from './FormFieldMedicalGroupList';
import FormFieldMedicalGroupLocation from './FormFieldMedicalGroupLocation';
import FormFieldMember from './FormFieldMember';
import FormFieldMemberOrMedicalGroup from './FormFieldMemberOrMedicalGroup';
import FormFieldNumber from './FormFieldNumber';
import FormFieldSelection from './FormFieldSelection';
import FormFieldServiceRecordReference from './FormFieldServiceRecordReference';
import FormFieldSnomedTerm from './FormFieldSnomedTerm';
import FormFieldTable from './FormFieldTable';
import FormFieldText from './FormFieldText';
import FormFieldUnsupported from './FormFieldUnsupported';
import FormFieldValueSet from './FormFieldValueSet';
import FormFieldVisitor from './FormFieldVisitor';
/**
 * Typescript guards for FormField types
 * Generated by Maven. See Java class GenerateTypeScript.
 */
declare class FormFieldTypes {
    static isBoolean(field: FormField): field is FormFieldBoolean;
    static isButton(field: FormField): field is FormFieldButton;
    static isConditionsTable(field: FormField): field is FormFieldConditionsTable;
    static isDateTime(field: FormField): field is FormFieldDateTime;
    static isEnum(field: FormField): field is FormFieldEnum;
    static isFormatted(field: FormField): field is FormFieldFormatted;
    static isFormSpecific(field: FormField): field is FormFieldFormSpecific;
    static isGroup(field: FormField): field is FormFieldGroup;
    static isMedicalGroup(field: FormField): field is FormFieldMedicalGroup;
    static isMedicalGroupList(field: FormField): field is FormFieldMedicalGroupList;
    static isMedicalGroupLocation(field: FormField): field is FormFieldMedicalGroupLocation;
    static isMember(field: FormField): field is FormFieldMember;
    static isMemberOrMedicalGroup(field: FormField): field is FormFieldMemberOrMedicalGroup;
    static isNumber(field: FormField): field is FormFieldNumber;
    static isSelection(field: FormField): field is FormFieldSelection;
    static isServiceRecordReference(field: FormField): field is FormFieldServiceRecordReference;
    static isSnomedTerm(field: FormField): field is FormFieldSnomedTerm;
    static isTable(field: FormField): field is FormFieldTable;
    static isText(field: FormField): field is FormFieldText;
    static isUnsupported(field: FormField): field is FormFieldUnsupported;
    static isValueSet(field: FormField): field is FormFieldValueSet;
    static accept<T>(field: FormField, visitor: FormFieldVisitor<T>): T;
}
export default FormFieldTypes;
